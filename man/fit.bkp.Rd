% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitBKP.R
\name{fit.BKP}
\alias{fit.BKP}
\title{Fit a Beta Kernel Process (BKP) Model for Binomial Observations}
\usage{
fit.BKP(
  data,
  X = NULL,
  y = NULL,
  m = NULL,
  alpha0 = 1,
  beta0 = 1,
  Xbounds = NULL,
  kernel = c("gaussian", "matern52", "matern32"),
  loss = "brier"
)
}
\arguments{
\item{data}{Optional data frame containing covariates \code{X}, observations \code{y}, and counts \code{m}
in the first \eqn{d}, \eqn{d+1}, and \eqn{d+2} columns, respectively.}

\item{X}{Covariate matrix of size \eqn{n \times d}. Ignored if \code{data} is provided.}

\item{y}{Vector of observed successes. Must be numeric with length equal to number of rows in \code{X}.}

\item{m}{Vector of binomial counts (trials). Must be numeric, positive, and same length as \code{y}.}

\item{alpha0}{Prior shape parameter (scalar or vector of length \eqn{n}) for the beta distribution.}

\item{beta0}{Prior shape parameter (scalar or vector of length \eqn{n}) for the beta distribution.}

\item{Xbounds}{Optional \eqn{d \times 2} matrix defining lower and upper bounds for each input dimension
(used for normalization). Defaults to \code{[0,1]^d}.}

\item{kernel}{Character string specifying the kernel function to use: one of \code{"gaussian"},
\code{"matern52"}, or \code{"matern32"}.}

\item{loss}{Loss function to be minimized during hyperparameter tuning. Choose between \code{"brier"}
(default) and \code{"NLML"} (negative log marginal likelihood).}
}
\value{
An object of class \code{"BKP"} containing:
\item{bestTheta}{Optimal kernel parameters (length \eqn{d}).}
\item{kernel}{Kernel type used.}
\item{loss}{Loss function used.}
\item{minLoss}{Minimum achieved loss.}
\item{X}{Original (unnormalized) design matrix.}
\item{Xnorm}{Normalized design matrix (scaled to \code{[0,1]^d}).}
\item{Xbounds}{\eqn{d \times 2} matrix defining lower and upper bounds for each input dimension.}
\item{y}{Observed successes.}
\item{m}{Binomial counts.}
\item{alpha0, beta0}{Prior parameters used.}
\item{alpha.n, beta.n}{Posterior parameters (vector).}
}
\description{
Fits a Beta Kernel Process model for binomial data, estimating latent functions
representing Beta distribution parameters using kernel smoothing.
}
\details{
The function fits the BKP model by optimizing kernel hyperparameters using multi-start
local optimization. Inputs are first normalized to the \eqn{[0,1]^d} space defined by \code{Xbounds}.
The kernel matrix is computed with optimized parameters, and posterior Beta parameters
\eqn{\alpha_n} and \eqn{\beta_n} are computed by smoothing the observed successes \eqn{y}
and failures \eqn{m - y} with the kernel matrix:
\deqn{
\alpha_n = \alpha_0 + K \cdot y, \quad
\beta_n = \beta_0 + K \cdot (m - y)
}
where \eqn{K} is the kernel matrix evaluated at normalized inputs.
}
\examples{
\dontrun{
set.seed(123)
X <- matrix(runif(100), ncol = 2)
phi <- function(x) 0.5 + 0.25 * sin(pi * x[1]) * cos(pi * x[2])
m <- rep(20, 50)
y <- rbinom(50, size = m, prob = apply(X, 1, phi))
fit <- fit.BKP(X = X, y = y, m = m, kernel = "gaussian", loss = "brier")
print(fit$bestTheta)
}

}
\author{
Jiangyan Zhao, Kunhai Qing, Jin Xu
}
